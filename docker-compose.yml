version: '3.4'

services:

  ApplicationDb:
    container_name: postgresDB
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass123
      - POSTGRES_DB=PassionPavers.Application
      - POSTGRES_HOST = 127.0.0.1
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - db
    restart: unless-stopped
 
  AuthDb:
    container_name: postgresAuthDB
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass123
      - POSTGRES_DB=PassionPavers.Auth
      - POSTGRES_HOST = 127.0.0.1
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
  
  pp.authservice:
    image: pp-auth-service
    build:
      context: .
      dockerfile: PP.AuthService/Dockerfile
    ports:     
      - "5000:5000"
    depends_on:
       - AuthDb

  pp.samplecrudservice:
    image: pp-sample-crud-service
    build:
      context: .
      dockerfile: PP.SampleCRUDService/Dockerfile

networks:
  db:
    driver: bridge

  backend:
    driver: bridge

volumes:
  db_data:
